package Primerito;
import java.io.File;
import java.util.List;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.Marshaller;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;
import javax.xml.transform.Result;

import org.xml.sax.*;
import org.xml.sax.helpers.DefaultHandler;


public class ReadXMLFile {
	

@XmlRootElement
@XmlAccessorType(XmlAccessType.FIELD)
class Config {
    @XmlElement(name="instance", required = true)
    protected List<Instance> instances;

    public List<Instance> getInstances() {
        return instances;
    }
}

@XmlAccessorType(XmlAccessType.FIELD)
class Instance {
    protected String hostName;
    protected String Autor;

    public String getHostName() {
        return hostName;
    }

    public void setHostName(String value) {
        this.hostName = value;
    }

    public String getAutor() {
        return Autor;
    }

    public void setAutor(String value) {
        this.Autor = value;
    }
}
	

   public static void main(String argv[]) {

    try {

	SAXParserFactory factory = SAXParserFactory.newInstance();
	SAXParser saxParser = factory.newSAXParser();

	DefaultHandler handler = new DefaultHandler() {

	boolean bTitulo = false;
	boolean bAutor = false;
	boolean bISBN = false;
	boolean bNumeroEj = false;
	boolean bEditorial = false;
	boolean bNumPag = false;
	boolean bAño = false;

	public void startElement(String uri, String localName,String qName,
                Attributes attributes) throws SAXException {

		//System.out.println("Start Element :" + qName);

		if (qName.equalsIgnoreCase("TITULO")) {
			bTitulo = true;
		}

		if (qName.equalsIgnoreCase("AUTOR")) {
			bAutor = true;
		}

		if (qName.equalsIgnoreCase("ISBN")) {
			bISBN = true;
		}

		if (qName.equalsIgnoreCase("NumeroEj")) {
			bNumeroEj = true;
		}
		
		if (qName.equalsIgnoreCase("Editorial")) {
			bEditorial = true;
		}
		
		if (qName.equalsIgnoreCase("NumPag")) {
			bNumPag = true;
		}
		
		if (qName.equalsIgnoreCase("Año")) {
			bAño = true;
		}
		

	}

	public void endElement(String uri, String localName,
		String qName) throws SAXException {

		//System.out.println("End Element :" + qName);

	}

	public void characters(char ch[], int start, int length) throws SAXException {

		if (bTitulo) {
			System.out.println("Titulo: " + new String(ch, start, length));
			bTitulo = false;
		}

		if (bAutor) {
			System.out.println("Autor: " + new String(ch, start, length));
			bAutor = false;
		}

		if (bISBN) {
			System.out.println("ISBN: " + new String(ch, start, length));
			bISBN = false;
		}

		if (bNumeroEj) {
			System.out.println("Ejemplar numero: " + new String(ch, start, length));
			bNumeroEj = false;
		}

		if (bEditorial) {
			System.out.println("Editorial: " + new String(ch, start, length));
			bEditorial = false;
		}

		if (bNumPag) {
			System.out.println("NumPag : " + new String(ch, start, length));
			bNumPag = false;
		}

		if (bAño) {
			System.out.println("Año : " + new String(ch, start, length));
			bAño = false;
		}

	}

     };

       saxParser.parse("libros.xml", handler);
       

       JAXBContext jc = JAXBContext.newInstance(Config.class);
       Config config = (Config)jc.createUnmarshaller().unmarshal(new File("libros.xml"));
       List<Instance> list = config.getInstances();
       list.get(0).setAutor("wolow");
       list.get(1).setHostName("192.168.3.140");
       list.get(2).setAutor("wewe");
       list.get(2).setHostName("192.168.1.168");

       Marshaller m = jc.createMarshaller();
       Result filex = null;
	m.marshal(config, filex);

     } catch (Exception e) {
       e.printStackTrace();
     }

   }

}